openapi: 3.0.0
info:
  contact:
    name: demo
    email: demo@axway.com
  title: Apple Health api
  version: '1.0'
  description: 'https://api.health.apple.com/ specs'
servers:
  - url: 'https://api.health.apple.com'
tags:
  - name: apple
  - name: medications
paths:
  '/activities/{id}':
    get:
      summary: Activities
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityResp'
      operationId: get-human-activities-id
      description: Returns a single activity segment
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /activities:
    get:
      summary: Activities
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityResp'
      operationId: get-human-activities
      description: Return a list of activity segments
  /blood_glucose:
    get:
      summary: Blood glucose
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BloodGlucoseResp'
      operationId: get-human-blood_glucose-latest
      description: Returns the latest blood glucose reading
  /blood_glucose/readings:
    get:
      summary: Blood Glucose
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                maxItems: 3
                items:
                  $ref: '#/components/schemas/BloodGlucoseResp'
      operationId: get-human-blood_glucose-readings
      description: Return all blood glucose readings
  '/blood_glucose/readings/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Blood Glucose
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BloodGlucoseResp'
      operationId: get-human-blood_glucose-readings-id
      description: Return a specific blood glucose reading
  /heart_rate:
    get:
      summary: Latest Heart Rate
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeartRateResp'
      operationId: get-human-heart_rate
      description: Returns the latest heart rate
  /heart_rate/readings:
    get:
      summary: All Heart Rates
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                maxItems: 10
                items:
                  $ref: '#/components/schemas/HeartRateResp'
      operationId: get-human-heart_rate-readings
      description: Returns all heart rate readings
  '/heart_rate/readings/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get a Heart Rate Reading
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeartRateResp'
              examples: {}
      operationId: get-human-heart_rate-readings-id
      description: Get a specific heart rate reading
  /sleeps:
    get:
      summary: Sleeps
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                maxItems: 5
                items:
                  $ref: '#/components/schemas/SleepResp'
      operationId: get-human-sleeps
      description: Get a list of sleeps the user has
  '/sleeps/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get a sleep
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SleepResp'
      operationId: get-human-sleeps-id
      description: Get a single sleep
components:
  schemas:
    Date:
      type: string
      title: Date
      format: date-time
    BaseResp:
      title: BaseResp
      type: object
      properties:
        id:
          type: string
          minLength: 1
          pattern: '[0-9a-f]{24}'
        source:
          type: string
          minLength: 1
          enum:
            - encounter
            - narrative
            - diagnosed
        updatedAt:
          type: string
          x-faker: date.recent
        createdAt:
          type: string
          x-faker: date.past
      required:
        - id
        - source
        - updatedAt
        - createdAt
    WearableBaseResp:
      title: WearableBaseResp
      allOf:
        - $ref: '#/components/schemas/BaseResp'
        - type: object
          properties:
            humanId:
              type: string
              pattern: '[0-9a-f]{24}'
            timestamp:
              $ref: '#/components/schemas/Date'
          required:
            - humanId
            - timestamp
    ActivityResp:
      allOf:
        - $ref: '#/components/schemas/WearableBaseResp'
        - type: object
          properties:
            startTime:
              type: string
              x-faker: date.past
            endTime:
              type: string
              x-faker: date.recent
            type:
              type: string
              enum:
                - walking
                - running
                - cycling
            duration:
              type: integer
              minimum: 300
              maximum: 3000
            distance:
              type: integer
              minimum: 3000
              maximum: 30000
            steps:
              type: integer
              minimum: 2000
              maximum: 20000
            calories:
              type: integer
              minimum: 200
              maximum: 500
            sourceData:
              type: object
          required:
            - startTime
            - endTime
            - type
            - duration
            - distance
            - steps
            - calories
            - sourceData
    BloodGlucoseResp:
      title: BloodGlucoseResp
      allOf:
        - $ref: '#/components/schemas/WearableBaseResp'
        - type: object
          properties:
            value:
              type: number
              minimum: 80
              maximum: 130
            unit:
              type: string
              enum:
                - mg/dl
            notes:
              type: string
              enum:
                - '-'
            mealTag:
              type: string
              enum:
                - before meal
                - after meal
            medicationTag:
              type: string
              enum:
                - before medication
                - after medication
          required:
            - value
            - unit
            - notes
            - mealTag
            - medicationTag
    HeartRateResp:
      title: HeartRateResp
      allOf:
        - $ref: '#/components/schemas/WearableBaseResp'
        - type: object
          properties:
            value:
              type: integer
              minimum: 35
              maximum: 200
            unit:
              type: string
              enum:
                - bpm
    SleepResp:
      title: SleepResp
      allOf:
        - $ref: '#/components/schemas/WearableBaseResp'
        - type: object
          properties:
            day:
              type: string
              x-faker: date.weekday
            startTime:
              type: string
              pattern: '2[1-3]:[0-5][0-9]'
            endTime:
              type: string
              pattern: '0[6-9]:[0-5][0-9]'
            mainSleep:
              type: boolean
            efficiency:
              type: number
              minimum: 0
              maximum: 1
            timeToFallAsleep:
              type: integer
              minimum: 0
              maximum: 20
            timeAfterWakeup:
              type: integer
              minimum: 0
              maximum: 30
            numberOfWakeups:
              type: integer
              minimum: 0
              maximum: 3
  securitySchemes: {}
  examples: {}
