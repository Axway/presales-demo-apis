openapi: 3.0.1
info:
  title: 'HAPI FHIR Server'
  contact: {}
  version: 5.5.0-PRE1-SNAPSHOT/e359b6d823/2021-05-19
  description: "Medication endpoints for the FHIR specification"
servers:
  - url: 'http://hapi.fhir.org/baseR4'
    description: 'HAPI FHIR Server'
tags:
  - name: Medication
    description: 'The Medication FHIR resource type'
paths:
  '/Medication/{id}':
    get:
      operationId: medication-id-get
      tags:
        - Medication
      summary: 'read-instance: Read Medication instance'
      parameters:
        - name: id
          in: path
          description: 'The resource ID'
          required: true
          style: simple
          schema:
            minimum: 1
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
    put:
      operationId: medication-id-put
      tags:
        - Medication
      summary: 'update-instance: Update an existing Medication instance, or create using a client-assigned ID'
      parameters:
        - name: id
          in: path
          description: 'The resource ID'
          required: true
          style: simple
          schema:
            minimum: 1
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
    delete:
      operationId: medication-id-delete
      tags:
        - Medication
      summary: 'instance-delete: Perform a logical delete on a resource instance'
      parameters:
        - name: id
          in: path
          description: 'The resource ID'
          required: true
          style: simple
          schema:
            minimum: 1
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
    patch:
      operationId: medication-id-patch
      tags:
        - Medication
      summary: 'instance-patch: Patch a resource instance of type Medication by ID'
      parameters:
        - name: id
          in: path
          description: 'The resource ID'
          required: true
          style: simple
          schema:
            minimum: 1
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
  '/Medication/{id}/_history/{version_id}':
    get:
      operationId: medication-id-history
      tags:
        - Medication
      summary: 'vread-instance: Read Medication instance with specific version'
      parameters:
        - name: id
          in: path
          description: 'The resource ID'
          required: true
          style: simple
          schema:
            minimum: 1
            type: string
        - name: version_id
          in: path
          description: 'The resource version ID'
          required: true
          style: simple
          schema:
            minimum: 1
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
  /Medication:
    get:
      operationId: medication-get
      tags:
        - Medication
      summary: 'search-type: Update an existing Medication instance, or create using a client-assigned ID'
      description: 'This is a search type'
      parameters:
        - name: _language
          in: query
          description: 'The language of the resource'
          schema: { $ref: "#/components/schemas/params" }
        - name: identifier
          in: query
          description: 'Returns medications with this external identifier'
          schema: { $ref: "#/components/schemas/params" }
        - name: code
          in: query
          description: 'Returns medications for a specific code'
          schema: { $ref: "#/components/schemas/params" }
        - name: ingredient
          in: query
          description: 'Returns medications for this ingredient reference'
          schema: { $ref: "#/components/schemas/params" }
        - name: lot-number
          in: query
          description: 'Returns medications in a batch with this lot number'
          schema: { $ref: "#/components/schemas/params" }
        - name: _lastUpdated
          in: query
          description: "Only return resources which were last updated as specified by\nthe given range"
          schema: { $ref: "#/components/schemas/params" }
        - name: _security
          in: query
          description: 'Search for resources which have the given security labels'
          schema: { $ref: "#/components/schemas/params" }
        - name: manufacturer
          in: query
          description: 'Returns medications made or sold for this manufacturer'
          schema: { $ref: "#/components/schemas/params" }
        - name: _filter
          in: query
          description: 'Search the contents of the resource''s data using a filter'
          schema: { $ref: "#/components/schemas/params" }
        - name: ingredient-code
          in: query
          description: 'Returns medications for this ingredient code'
          schema: { $ref: "#/components/schemas/params" }
        - name: form
          in: query
          description: 'Returns medications for a specific dose form'
          schema: { $ref: "#/components/schemas/params" }
        - name: _profile
          in: query
          description: 'Search for resources which have the given profile'
          schema: { $ref: "#/components/schemas/params" }
        - name: _has
          in: query
          description: 'Return resources linked to by the given target'
          schema: { $ref: "#/components/schemas/params" }
        - name: _tag
          in: query
          description: 'Search for resources which have the given tag'
          schema: { $ref: "#/components/schemas/params" }
        - name: _source
          in: query
          description: 'Search for resources which have the given source value (Resource.meta.source)'
          schema: { $ref: "#/components/schemas/params" }
        - name: _id
          in: query
          description: 'The ID of the resource'
          schema: { $ref: "#/components/schemas/params" }
        - name: _content
          in: query
          description: 'Search the contents of the resource''s data using a fulltext search'
          schema: { $ref: "#/components/schemas/params" }
        - name: _text
          in: query
          description: "Search the contents of the resource's narrative using a fulltext\nsearch"
          schema: { $ref: "#/components/schemas/params" }
        - name: expiration-date
          in: query
          description: 'Returns medications in a batch with this expiration date'
          schema: { $ref: "#/components/schemas/params" }
        - name: status
          in: query
          description: 'Returns medications for this status'
          schema: { $ref: "#/components/schemas/params" }
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
    post:
      operationId: medication-id-post
      tags:
        - Medication
      summary: 'create-type: Create a new Medication instance'
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
  /Medication/_history:
    get:
      operationId: medication-history-get
      tags:
        - Medication
      summary: 'type-history: Fetch the resource change history for all resources of type Medication'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
  '/Medication/{id}/_history':
    get:
      operationId: medication-id-history-get
      tags:
        - Medication
      summary: 'instance-history: Fetch the resource change history for all resources of type Medication'
      parameters:
        - name: id
          in: path
          description: 'The resource ID'
          required: true
          style: simple
          schema:
            minimum: 1
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
  /Medication/$expunge:
    post:
      operationId: medication-expunge-post
      tags:
        - Medication
      requestBody:
        content:
          application/json:
            schema:
              title: 'FHIR Resource'
              type: object
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
  '/Medication/{id}/$expunge':
    post:
      operationId: medication-id-expunge-post
      tags:
        - Medication
      parameters:
        - name: id
          in: path
          description: 'The resource ID'
          required: true
          style: simple
          schema:
            minimum: 1
            type: string
      requestBody:
        content:
          application/json:
            schema:
              title: 'FHIR Resource'
              type: object
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
  /Medication/$meta:
    get:
      operationId: medication-meta-get
      tags:
        - Medication
      description: 'Request a global list of tags, profiles, and security labels'
      parameters:
        - name: return
          in: query
          required: false
          schema: { $ref: "#/components/schemas/params" }
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
  '/Medication/{id}/$meta':
    get:
      tags:
        - Medication
      description: 'Request a global list of tags, profiles, and security labels'
      parameters:
        - name: id
          in: path
          description: 'The resource ID'
          required: true
          style: simple
          schema:
            minimum: 1
            type: string
        - name: return
          in: query
          required: false
          schema: { $ref: "#/components/schemas/params" }
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
  '/Medication/{id}/$meta-add':
    post:
      tags:
        - Medication
      description: 'Add tags, profiles, and/or security labels to a resource'
      parameters:
        - name: id
          in: path
          description: 'The resource ID'
          required: true
          style: simple
          schema:
            minimum: 1
            type: string
      requestBody:
        content:
          application/json:
            schema:
              title: 'FHIR Resource'
              type: object
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
  '/Medication/{id}/$meta-delete':
    post:
      tags:
        - Medication
      description: 'Delete tags, profiles, and/or security labels from a resource'
      parameters:
        - name: id
          in: path
          description: 'The resource ID'
          required: true
          style: simple
          schema:
            minimum: 1
            type: string
      requestBody:
        content:
          application/json:
            schema:
              title: 'FHIR Resource'
              type: object
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
  /Medication/$validate:
    get:
      tags:
        - Medication
      parameters:
        - name: resource
          in: query
          required: false
          schema: { $ref: "#/components/schemas/params" }
        - name: mode
          in: query
          required: false
          schema: { $ref: "#/components/schemas/params" }
        - name: profile
          in: query
          required: false
          schema: { $ref: "#/components/schemas/params" }
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
  '/Medication/{id}/$validate':
    get:
      tags:
        - Medication
      parameters:
        - name: id
          in: path
          description: 'The resource ID'
          required: true
          style: simple
          schema:
            minimum: 1
            type: string
        - name: resource
          in: query
          required: false
          schema: { $ref: "#/components/schemas/params" }
        - name: mode
          in: query
          required: false
          schema: { $ref: "#/components/schemas/params" }
        - name: profile
          in: query
          required: false
          schema: { $ref: "#/components/schemas/params" }
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
  '/Medication/{id}/$graphql':
    get:
      tags:
        - Medication
      description: 'This operation invokes a GraphQL expression for fetching an joining a graph of resources, returning them in a custom format.'
      parameters:
        - name: id
          in: path
          description: 'The resource ID'
          required: true
          style: simple
          schema:
            minimum: 1
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
  '/Medication/{id}/$diff':
    get:
      tags:
        - Medication
      summary: 'Comparte two resources or two versions of a single resource'
      description: 'This operation examines two resource versions (can be two versions of the same resource, or two different resources) and generates a FHIR Patch document showing the differences.'
      parameters:
        - name: id
          in: path
          description: 'The resource ID'
          required: true
          style: simple
          schema:
            minimum: 1
            type: string
        - name: from
          in: query
          description: 'The resource ID and version to diff from'
          required: true
          schema: { $ref: "#/components/schemas/params" }
        - name: to
          in: query
          description: 'The resource ID and version to diff to'
          required: true
          schema: { $ref: "#/components/schemas/params" }
        - name: includeMeta
          in: query
          description: "Should differences in the Resource.meta element be included in\nthe diff"
          required: false
          schema: { $ref: "#/components/schemas/params" }
        - name: fromVersion
          in: query
          description: 'The resource ID and version to diff from'
          required: false
          schema: { $ref: "#/components/schemas/params" }
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
components:
  schemas:
    params:
      title: simple param
      type: string
